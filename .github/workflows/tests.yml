name: "Run tests"

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.11.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ matrix.os }}-py${{ matrix.python-version }}-pt${{ matrix.pytorch-version }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-py${{ matrix.python-version }}-pt${{ matrix.pytorch-version }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_tests.txt

    - name: Get dvc cache dir
      id: dvc-cache-dir
      run: |
        echo "::set-output name=dir::$(dvc cache dir)"

    - name: Install dvc
      run: |
        pip install dvc
        pip install -U pip
        pip install "dvc[gdrive]"
        pip install "dvc[all]"

    - name: Get dvc cache data
      id: dvc-cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.dvc-cache-dir.outputs.dir }}
        key: ${{ matrix.os }}-dvc-${{ hashFiles('**/data/raw.dvc') }}

    - name: Pull dvc data
      if: steps.dvc-cache.outputs.cache-hit != 'true'
      run: |
        # dvc remote add -d remote_storage gs://ml_ops_group_75_data_bucket/
        # test if 'Data and pipelines are up to date.'
        dvc status
        dvc data status
        dvc pull

    - name: Test with pytest
      run: |
        pip install pytest
        pytest -v
